{"ast":null,"code":"var _jsxFileName = \"/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment4/src/components/OnboardingSlides.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Slide from \"./Slide\";\nimport SlideIndicator from \"./SlideIndicator\";\nimport { completeOnboarding } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_SLIDES = 3;\n\nconst OnboardingSlides = () => {\n  _s();\n\n  const [activeSlide, setActiveSlide] = useState(1);\n  const dispatch = useDispatch();\n\n  const setSlideState = id => {\n    if (id === activeSlide) return \"active\";\n    return \"inactive\";\n  };\n\n  const nextSlide = () => {\n    let id = activeSlide;\n    id < TOTAL_SLIDES ? setActiveSlide(id + 1) : dispatch(completeOnboarding());\n  };\n\n  const generateSlideIndicators = () => {\n    let indicators = [];\n\n    for (let i = 1; i <= TOTAL_SLIDES; i++) {\n      indicators.push( /*#__PURE__*/_jsxDEV(SlideIndicator, {\n        slideStatus: setSlideState(i),\n        slideID: i,\n        clickHandler: () => setActiveSlide(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this));\n    }\n\n    return indicators;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main my-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slides-bg\",\n      children: [/*#__PURE__*/_jsxDEV(Slide, {\n        slideStatus: setSlideState(1),\n        slideId: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Access your todo list from anywhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your todos automatically sync on all your devices.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fit my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + \"/onboarding1.png\",\n            className: \"img-fluid my-4 float-right fit\",\n            alt: \"The Todo app on iPad and iPhone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Slide, {\n        slideStatus: setSlideState(2),\n        slideId: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Filter todos by status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Decide whether you want to see all your todos, only your outstanding todos, or even just the todos you've already completed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fit my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + \"/onboarding2.gif\",\n            className: \"img-fluid\",\n            alt: \"The visibility filter allows you to choose which todos are displayed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Slide, {\n        slideStatus: setSlideState(3),\n        slideId: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Something something something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lorem ipsum...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slides-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"align-left control-btn\",\n          onClick: () => dispatch(completeOnboarding()),\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-center\",\n          children: generateSlideIndicators()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"align-right control-btn\",\n          onClick: nextSlide,\n          children: activeSlide < TOTAL_SLIDES ? \"Next\" : \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OnboardingSlides, \"c0zuYI65tz3nXRdB3ijeHnELB2A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OnboardingSlides;\nexport default OnboardingSlides;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnboardingSlides\");","map":{"version":3,"sources":["/Users/shebthebat/Documents/NEU/Sem 5/CS 7580/shebna_mathew_assignment4/src/components/OnboardingSlides.js"],"names":["useState","useDispatch","Slide","SlideIndicator","completeOnboarding","TOTAL_SLIDES","OnboardingSlides","activeSlide","setActiveSlide","dispatch","setSlideState","id","nextSlide","generateSlideIndicators","indicators","i","push","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport Slide from \"./Slide\";\nimport SlideIndicator from \"./SlideIndicator\";\nimport {completeOnboarding} from \"../redux/actions\";\n\nconst TOTAL_SLIDES = 3;\n\nconst OnboardingSlides = () => {\n    const [activeSlide, setActiveSlide] = useState(1);\n\n    const dispatch = useDispatch();\n\n    const setSlideState = id => {\n        if (id === activeSlide)\n            return \"active\";\n        return \"inactive\";\n    }\n\n    const nextSlide = () => {\n        let id = activeSlide;\n        id < TOTAL_SLIDES ? setActiveSlide(id + 1) : dispatch(completeOnboarding());\n    }\n\n    const generateSlideIndicators = () => {\n        let indicators = [];\n        for (let i = 1; i <= TOTAL_SLIDES; i++) {\n            indicators.push(\n                <SlideIndicator slideStatus={setSlideState(i)} key={i} \n                                slideID={i} \n                                clickHandler={() => setActiveSlide(i)} />\n            )\n        }\n        return indicators;\n    }\n\n    return (\n        \n        <div className=\"container main my-4\">\n        <div className=\"slides-bg\">\n            <Slide slideStatus={setSlideState(1)} slideId={1}>\n                <h1>Access your todo list from anywhere</h1>\n                <p>Your todos automatically sync on all your devices.</p>\n                <div className=\"fit my-4\">\n                    <img src={process.env.PUBLIC_URL + \"/onboarding1.png\"}\n                        className=\"img-fluid my-4 float-right fit\" alt=\"The Todo app on iPad and iPhone\" />\n                </div>\n            </Slide>\n            <Slide slideStatus={setSlideState(2)} slideId={2}>\n                <h1>Filter todos by status</h1>\n                <p>Decide whether you want to see all your todos, only your \n                    outstanding todos, or even just the todos you've already completed.\n                </p>\n                <div className=\"fit my-4\">\n                    <img src={process.env.PUBLIC_URL + \"/onboarding2.gif\"}\n                         className=\"img-fluid\"\n                         alt=\"The visibility filter allows you to choose which todos are displayed.\" />\n                </div>\n            </Slide>\n            <Slide slideStatus={setSlideState(3)} slideId={3}>\n                <h1>Something something something</h1>\n                <p>Lorem ipsum...</p>\n            </Slide>\n            <div className=\"slides-controls\">\n                <button className=\"align-left control-btn\" onClick={() => dispatch(completeOnboarding())}>Skip</button>\n                <div className=\"align-center\">\n                    {generateSlideIndicators()}\n                </div>\n                <button className=\"align-right control-btn\" onClick={nextSlide}>\n                    {\n                        activeSlide < TOTAL_SLIDES ? \"Next\" : \"Done\"\n                    }\n                </button>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default OnboardingSlides;"]},"metadata":{},"sourceType":"module"}